// Generated by CoffeeScript 1.3.1
(function() {

  Ext.define('carStore.appconfig.AppConfig', {
    statics: {
      MOCK_DATA_ENV: 'mockdata',
      PRODUCTION_ENV: 'production'
    },
    config: {
      environment: null,
      mockdata: {
        endpoints: {
          cars: {
            url: 'data/cars.json',
            root: 'data'
          },
          defaults: {
            urlPrefix: 'data/',
            urlSuffix: '.json',
            dataRoot: 'data'
          }
        }
      },
      production: {
        endpoints: {
          cars: {
            url: 'proddata/cars.json',
            root: 'proddata'
          },
          defaults: {
            urlPrefix: 'proddata/',
            urlSuffix: '.json',
            dataRoot: 'proddata'
          }
        }
      }
    },
    constructor: function(cfg) {
      var _ref;
      if ((cfg != null ? cfg.environment : void 0) && ((_ref = carStore.appconfig.AppConfig) != null ? _ref[cfg.environment] : void 0)) {
        return this.setEnvironment(carStore.appconfig.AppConfig[cfg.environment]);
      } else {
        return this.setEnvironment(carStore.appconfig.AppConfig.PRODUCTION_ENV);
      }
    },
    getEndpoint: function(endpointName) {
      var defaults, endpoints, environmentConfig, result, _ref, _ref1;
      environmentConfig = this[this.getEnvironment()];
      endpoints = environmentConfig.endpoints;
      defaults = environmentConfig.defaults;
      if (endpoints != null ? endpoints[endpointName] : void 0) {
        return result = {
          url: endpoints[endpointName].url,
          root: (_ref = (_ref1 = endpoints[endpointName]) != null ? _ref1.root : void 0) != null ? _ref : defaults.dataRoot
        };
      } else {
        return result = {
          url: defaults.urlPrefix + endpointName + defaults.urlSuffix,
          root: defaults.dataRoot
        };
      }
    }
  });

}).call(this);
